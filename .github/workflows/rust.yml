name: Rust Check & Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - run: rustup toolchain install stable --profile minimal
      - id: rustcache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.os }}
      - name: Check
        run: cargo check --verbose
      - name: Run Tests
        run: cargo test --verbose
      - name: Run Clippy
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
      - name: Set cache used in summary
        if: ${{ steps.rustcache.outputs.cache-hit }}
        run: |
          echo "Cache used :heavy_check_mark: (${{ matrix.os }})" >> $GITHUB_STEP_SUMMARY
      - name: Set cache NOT used in summary
        if: ${{ !steps.rustcache.outputs.cache-hit }}
        run: |
          echo "Cache not used :x: (${{ matrix.os }})" >> $GITHUB_STEP_SUMMARY
